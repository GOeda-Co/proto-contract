// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: deck/deck.proto

package deckv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddDeckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDeckRequest) Reset() {
	*x = AddDeckRequest{}
	mi := &file_deck_deck_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeckRequest) ProtoMessage() {}

func (x *AddDeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deck_deck_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeckRequest.ProtoReflect.Descriptor instead.
func (*AddDeckRequest) Descriptor() ([]byte, []int) {
	return file_deck_deck_proto_rawDescGZIP(), []int{0}
}

func (x *AddDeckRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDeckRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ReadDeckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeckId        string                 `protobuf:"bytes,1,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadDeckRequest) Reset() {
	*x = ReadDeckRequest{}
	mi := &file_deck_deck_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadDeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeckRequest) ProtoMessage() {}

func (x *ReadDeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deck_deck_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeckRequest.ProtoReflect.Descriptor instead.
func (*ReadDeckRequest) Descriptor() ([]byte, []int) {
	return file_deck_deck_proto_rawDescGZIP(), []int{1}
}

func (x *ReadDeckRequest) GetDeckId() string {
	if x != nil {
		return x.DeckId
	}
	return ""
}

type AddCardToDeckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CardId        string                 `protobuf:"bytes,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	DeckId        string                 `protobuf:"bytes,2,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCardToDeckRequest) Reset() {
	*x = AddCardToDeckRequest{}
	mi := &file_deck_deck_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCardToDeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardToDeckRequest) ProtoMessage() {}

func (x *AddCardToDeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deck_deck_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardToDeckRequest.ProtoReflect.Descriptor instead.
func (*AddCardToDeckRequest) Descriptor() ([]byte, []int) {
	return file_deck_deck_proto_rawDescGZIP(), []int{2}
}

func (x *AddCardToDeckRequest) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *AddCardToDeckRequest) GetDeckId() string {
	if x != nil {
		return x.DeckId
	}
	return ""
}

type DeckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deck          *Deck                  `protobuf:"bytes,1,opt,name=deck,proto3" json:"deck,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeckResponse) Reset() {
	*x = DeckResponse{}
	mi := &file_deck_deck_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeckResponse) ProtoMessage() {}

func (x *DeckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deck_deck_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeckResponse.ProtoReflect.Descriptor instead.
func (*DeckResponse) Descriptor() ([]byte, []int) {
	return file_deck_deck_proto_rawDescGZIP(), []int{3}
}

func (x *DeckResponse) GetDeck() *Deck {
	if x != nil {
		return x.Deck
	}
	return nil
}

type DeckListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Decks         []*Deck                `protobuf:"bytes,1,rep,name=decks,proto3" json:"decks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeckListResponse) Reset() {
	*x = DeckListResponse{}
	mi := &file_deck_deck_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeckListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeckListResponse) ProtoMessage() {}

func (x *DeckListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deck_deck_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeckListResponse.ProtoReflect.Descriptor instead.
func (*DeckListResponse) Descriptor() ([]byte, []int) {
	return file_deck_deck_proto_rawDescGZIP(), []int{4}
}

func (x *DeckListResponse) GetDecks() []*Deck {
	if x != nil {
		return x.Decks
	}
	return nil
}

type CardListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         []*Card                `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CardListResponse) Reset() {
	*x = CardListResponse{}
	mi := &file_deck_deck_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardListResponse) ProtoMessage() {}

func (x *CardListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deck_deck_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardListResponse.ProtoReflect.Descriptor instead.
func (*CardListResponse) Descriptor() ([]byte, []int) {
	return file_deck_deck_proto_rawDescGZIP(), []int{5}
}

func (x *CardListResponse) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type Deck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeckId        string                 `protobuf:"bytes,1,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Cards         []*Card                `protobuf:"bytes,6,rep,name=cards,proto3" json:"cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Deck) Reset() {
	*x = Deck{}
	mi := &file_deck_deck_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck) ProtoMessage() {}

func (x *Deck) ProtoReflect() protoreflect.Message {
	mi := &file_deck_deck_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck.ProtoReflect.Descriptor instead.
func (*Deck) Descriptor() ([]byte, []int) {
	return file_deck_deck_proto_rawDescGZIP(), []int{6}
}

func (x *Deck) GetDeckId() string {
	if x != nil {
		return x.DeckId
	}
	return ""
}

func (x *Deck) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Deck) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Deck) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Deck) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Deck) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type Card struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CardId           string                 `protobuf:"bytes,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	CreatedBy        string                 `protobuf:"bytes,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Word             string                 `protobuf:"bytes,4,opt,name=word,proto3" json:"word,omitempty"`
	Translation      string                 `protobuf:"bytes,5,opt,name=translation,proto3" json:"translation,omitempty"`
	Easiness         float64                `protobuf:"fixed64,6,opt,name=easiness,proto3" json:"easiness,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Interval         int32                  `protobuf:"varint,8,opt,name=interval,proto3" json:"interval,omitempty"`
	ExpiresAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	RepetitionNumber int32                  `protobuf:"varint,10,opt,name=repetition_number,json=repetitionNumber,proto3" json:"repetition_number,omitempty"`
	DeckId           string                 `protobuf:"bytes,11,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
	Tags             []string               `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Card) Reset() {
	*x = Card{}
	mi := &file_deck_deck_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_deck_deck_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_deck_deck_proto_rawDescGZIP(), []int{7}
}

func (x *Card) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *Card) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Card) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Card) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *Card) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

func (x *Card) GetEasiness() float64 {
	if x != nil {
		return x.Easiness
	}
	return 0
}

func (x *Card) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Card) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Card) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Card) GetRepetitionNumber() int32 {
	if x != nil {
		return x.RepetitionNumber
	}
	return 0
}

func (x *Card) GetDeckId() string {
	if x != nil {
		return x.DeckId
	}
	return ""
}

func (x *Card) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_deck_deck_proto protoreflect.FileDescriptor

const file_deck_deck_proto_rawDesc = "" +
	"\n" +
	"\x0fdeck/deck.proto\x12\x04deck\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"F\n" +
	"\x0eAddDeckRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"*\n" +
	"\x0fReadDeckRequest\x12\x17\n" +
	"\adeck_id\x18\x01 \x01(\tR\x06deckId\"H\n" +
	"\x14AddCardToDeckRequest\x12\x17\n" +
	"\acard_id\x18\x01 \x01(\tR\x06cardId\x12\x17\n" +
	"\adeck_id\x18\x02 \x01(\tR\x06deckId\".\n" +
	"\fDeckResponse\x12\x1e\n" +
	"\x04deck\x18\x01 \x01(\v2\n" +
	".deck.DeckR\x04deck\"4\n" +
	"\x10DeckListResponse\x12 \n" +
	"\x05decks\x18\x01 \x03(\v2\n" +
	".deck.DeckR\x05decks\"4\n" +
	"\x10CardListResponse\x12 \n" +
	"\x05cards\x18\x01 \x03(\v2\n" +
	".deck.CardR\x05cards\"\xd1\x01\n" +
	"\x04Deck\x12\x17\n" +
	"\adeck_id\x18\x01 \x01(\tR\x06deckId\x12\x1d\n" +
	"\n" +
	"created_by\x18\x02 \x01(\tR\tcreatedBy\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12 \n" +
	"\x05cards\x18\x06 \x03(\v2\n" +
	".deck.CardR\x05cards\"\xb7\x03\n" +
	"\x04Card\x12\x17\n" +
	"\acard_id\x18\x01 \x01(\tR\x06cardId\x12\x1d\n" +
	"\n" +
	"created_by\x18\x02 \x01(\tR\tcreatedBy\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04word\x18\x04 \x01(\tR\x04word\x12 \n" +
	"\vtranslation\x18\x05 \x01(\tR\vtranslation\x12\x1a\n" +
	"\beasiness\x18\x06 \x01(\x01R\beasiness\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1a\n" +
	"\binterval\x18\b \x01(\x05R\binterval\x129\n" +
	"\n" +
	"expires_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12+\n" +
	"\x11repetition_number\x18\n" +
	" \x01(\x05R\x10repetitionNumber\x12\x17\n" +
	"\adeck_id\x18\v \x01(\tR\x06deckId\x12\x12\n" +
	"\x04tags\x18\f \x03(\tR\x04tags2\xff\x02\n" +
	"\vDeckService\x123\n" +
	"\aAddDeck\x12\x14.deck.AddDeckRequest\x1a\x12.deck.DeckResponse\x12>\n" +
	"\fReadAllDecks\x12\x16.google.protobuf.Empty\x1a\x16.deck.DeckListResponse\x125\n" +
	"\bReadDeck\x12\x15.deck.ReadDeckRequest\x1a\x12.deck.DeckResponse\x12;\n" +
	"\n" +
	"DeleteDeck\x12\x15.deck.ReadDeckRequest\x1a\x16.google.protobuf.Empty\x12C\n" +
	"\rAddCardToDeck\x12\x1a.deck.AddCardToDeckRequest\x1a\x16.google.protobuf.Empty\x12B\n" +
	"\x11ReadCardsFromDeck\x12\x15.deck.ReadDeckRequest\x1a\x16.deck.CardListResponseB\x19Z\x17repeatro.deck.v1;deckv1b\x06proto3"

var (
	file_deck_deck_proto_rawDescOnce sync.Once
	file_deck_deck_proto_rawDescData []byte
)

func file_deck_deck_proto_rawDescGZIP() []byte {
	file_deck_deck_proto_rawDescOnce.Do(func() {
		file_deck_deck_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_deck_deck_proto_rawDesc), len(file_deck_deck_proto_rawDesc)))
	})
	return file_deck_deck_proto_rawDescData
}

var file_deck_deck_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_deck_deck_proto_goTypes = []any{
	(*AddDeckRequest)(nil),        // 0: deck.AddDeckRequest
	(*ReadDeckRequest)(nil),       // 1: deck.ReadDeckRequest
	(*AddCardToDeckRequest)(nil),  // 2: deck.AddCardToDeckRequest
	(*DeckResponse)(nil),          // 3: deck.DeckResponse
	(*DeckListResponse)(nil),      // 4: deck.DeckListResponse
	(*CardListResponse)(nil),      // 5: deck.CardListResponse
	(*Deck)(nil),                  // 6: deck.Deck
	(*Card)(nil),                  // 7: deck.Card
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 9: google.protobuf.Empty
}
var file_deck_deck_proto_depIdxs = []int32{
	6,  // 0: deck.DeckResponse.deck:type_name -> deck.Deck
	6,  // 1: deck.DeckListResponse.decks:type_name -> deck.Deck
	7,  // 2: deck.CardListResponse.cards:type_name -> deck.Card
	8,  // 3: deck.Deck.created_at:type_name -> google.protobuf.Timestamp
	7,  // 4: deck.Deck.cards:type_name -> deck.Card
	8,  // 5: deck.Card.created_at:type_name -> google.protobuf.Timestamp
	8,  // 6: deck.Card.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 7: deck.Card.expires_at:type_name -> google.protobuf.Timestamp
	0,  // 8: deck.DeckService.AddDeck:input_type -> deck.AddDeckRequest
	9,  // 9: deck.DeckService.ReadAllDecks:input_type -> google.protobuf.Empty
	1,  // 10: deck.DeckService.ReadDeck:input_type -> deck.ReadDeckRequest
	1,  // 11: deck.DeckService.DeleteDeck:input_type -> deck.ReadDeckRequest
	2,  // 12: deck.DeckService.AddCardToDeck:input_type -> deck.AddCardToDeckRequest
	1,  // 13: deck.DeckService.ReadCardsFromDeck:input_type -> deck.ReadDeckRequest
	3,  // 14: deck.DeckService.AddDeck:output_type -> deck.DeckResponse
	4,  // 15: deck.DeckService.ReadAllDecks:output_type -> deck.DeckListResponse
	3,  // 16: deck.DeckService.ReadDeck:output_type -> deck.DeckResponse
	9,  // 17: deck.DeckService.DeleteDeck:output_type -> google.protobuf.Empty
	9,  // 18: deck.DeckService.AddCardToDeck:output_type -> google.protobuf.Empty
	5,  // 19: deck.DeckService.ReadCardsFromDeck:output_type -> deck.CardListResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_deck_deck_proto_init() }
func file_deck_deck_proto_init() {
	if File_deck_deck_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_deck_deck_proto_rawDesc), len(file_deck_deck_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_deck_deck_proto_goTypes,
		DependencyIndexes: file_deck_deck_proto_depIdxs,
		MessageInfos:      file_deck_deck_proto_msgTypes,
	}.Build()
	File_deck_deck_proto = out.File
	file_deck_deck_proto_goTypes = nil
	file_deck_deck_proto_depIdxs = nil
}
