syntax = "proto3";

package deck;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "card/card.proto";

option go_package = "github.com/GOeda-Co/proto-contract/gen/go/deck;deckv1";

service DeckService {
  rpc AddDeck(AddDeckRequest) returns (DeckResponse);
  rpc ReadAllDecks(google.protobuf.Empty) returns (DeckListResponse);
  rpc ReadDeck(ReadDeckRequest) returns (DeckResponse);
  rpc SearchAllPublicDecks(google.protobuf.Empty) returns (SearchAllPublicDecksResponse);
  rpc SearchUserPublicDecks(SearchUserPublicDecksRequest) returns (SearchUserPublicDecksResponse);
  rpc DeleteDeck(ReadDeckRequest) returns (google.protobuf.Empty);
  rpc AddCardToDeck(AddCardToDeckRequest) returns (google.protobuf.Empty);
  rpc ReadCardsFromDeck(ReadDeckRequest) returns (CardListResponse);
}

message AddDeckRequest {
  string name = 1;
  string description = 2;
}

message ReadDeckRequest {
  string deck_id = 1;
}

message SearchAllPublicDecksResponse {
  repeated Deck decks = 1;
}

message SearchUserPublicDecksRequest {
  string user_id = 1;
}

message SearchUserPublicDecksResponse {
  repeated Deck decks = 1;
}

message AddCardToDeckRequest {
  string card_id = 1;
  string deck_id = 2;
}

message DeckResponse {
  Deck deck = 1;
}

message DeckListResponse {
  repeated Deck decks = 1;
}

message CardListResponse {
  repeated card.Card cards = 1;
}

message Deck {
  string deck_id = 1;
  string created_by = 2;
  google.protobuf.Timestamp created_at = 3;
  string name = 4;
  string description = 5;
  repeated card.Card cards = 6;
  uint32 cards_quantity = 7;
  bool is_public = 8;
}